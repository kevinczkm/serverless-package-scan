name: CI Checks
run-name: Running Terraform Checks by ${{ github.actor }}

on:
 workflow_dispatch:

jobs:
  Initial-Checks:
    runs-on: ubuntu-latest

    steps:
    - name: Getting initiator name
      run: echo "Workflow initiated by ${{ github.actor }} from branch ${{ github.ref_name }}"

  terraform-checks:
    runs-on: ubuntu-latest
    needs: Initial-Checks
    outputs:
      status: ${{ job.status }}
    steps:
    - name: Checkout
      uses: actions/checkout@v3

    # - name: Setup Terraform
    #   uses: hashicorp/setup-terraform@v3

    # - name: Terraform fmt
    #   id: fmt
    #   run: terraform fmt -check

    # - name: Terraform Validate
    #   id: validate
    #   run: terraform validate -no-color

    # - uses: terraform-linters/setup-tflint@v3
    #   with:
    #     tflint_version: latest
    
    - name: Set up Terraform
      uses: hashicorp/setup-terraform@v1

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ap-southeast-1
    
    # - name: Show version
    #   run: tflint --version

    # - name: Init TFLint
    #   run: tflint --init

    # - name: Run TFLint
    #   run: tflint -f compact


    - name: Terraform init
      run: terraform init

    - name: Terraform fmt
      run: terraform fmt

    - name: Terraform plan
      run: terraform plan 

    - name: Terraform apply
      run: terraform apply -auto-approve

  terraform-wait:
    runs-on: ubuntu-latest
    needs: [Initial-Checks,terraform-checks]

    steps:
      - name: Pause 2min to verify lambda creation and test
        run: sleep 120    
  
  snyk-checks:
    runs-on: ubuntu-latest
    needs: [Initial-Checks,terraform-checks,terraform-wait]
    outputs: 
      status: ${{ job.status }}
    steps:
      - uses: actions/checkout@master
      - name: Run Snyk to check for vulnerabilities
        uses: snyk/actions/node@master
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
        with:
          command: monitor 

  summary:
      needs: [Initial-Checks,terraform-checks, snyk-checks,terraform-wait] # add snyk-checks 
      runs-on: ubuntu-latest
      steps:
        - name: Adding markdown
          run: |
            TF_STATUS=${{ needs.terraform-checks.outputs.status }}
            # SNYK_STATUS=${{ needs.snyk-checks.outputs.status }}

            echo '## ðŸš€ Preparing Build Summary ðŸš€' >> $GITHUB_STEP_SUMMARY
            echo '' >> $GITHUB_STEP_SUMMARY

            echo "| Job Name        | Status |" >> $GITHUB_STEP_SUMMARY
            echo "|-----------------|--------|" >> $GITHUB_STEP_SUMMARY
            echo "| tf-check       | $TF_STATUS |" >> $GITHUB_STEP_SUMMARY
            # echo " snyk-check     | $SNYK_STATUS |" >> $GITHUB_STEP_SUMMARY
            echo '' >> $GITHUB_STEP_SUMMARY

            echo '## Job ran by: ${{ github.actor }}' >> $GITHUB_STEP_SUMMARY      


  terraform-destroy:
    needs: [Initial-Checks,terraform-checks, snyk-checks,terraform-wait,summary]
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
      
      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v1

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ap-southeast-1
      
      - name: Terraform init
        run: terraform init

      - name: Terraform destroy
        run: terraform destroy -auto-approve
